;;;;
;;;; genturfahi - lo la .ckim. ke pe'a jajgau ratcu ke'e genturfa'i
;;;;            `-> A Scheme packrat parser.
;;;;
;;;; Copyright (c) 2010 ".alyn.post." <alyn.post@lodockikumazvati.org>
;;;;
;;;; Permission to use, copy, modify, and/or distribute this software for any
;;;; purpose with or without fee is hereby granted, provided that the above
;;;; copyright notice and this permission notice appear in all copies.
;;;;
;;;; THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
;;;; WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
;;;; MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
;;;; ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
;;;; WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
;;;; ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
;;;; OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
;;;;

;;;
;;; parser options.  The default values are commented out.
;;;

;; the exit status of the parser.
;;
;{(exit-status 0)}

;; The name of the symbol the parser generator
;; rules will be bound to in the output file.
;;
;{(definition-name "gerna")}
{(definition-name "genturfahi-peg-gerna")}

;; Enable debugging of the paser.
;;
;; Describe the parse as it occurs, including
;; rule matches and failures, backtracking, memoization, &c.
;;
;; There may need to be a debug level.
;;
;{(debug #f)}

;; Enable profiling of the parser.
;;
;; for each step in the parser, track:
;;
;;  * success or failure of rule
;;  * memoization
;;
;{(profile #f)}

;; Enable memoization of non-terminals.
;;
;;
;{(memoize #t)}

;{(sentinel #\nul)}

;{(empty-string "")}

;{(nonmatch-token #f)}

cfari           <- canlu
                   #:samselpla cfari-samselpla*
                   canlu
                   #:gerna gerna
                   FAhO                             {samselpla-cfari}

; we want to execute header code before compiling the grammar.
; this rule is here to associated a different code action with
; header code than body code.
;
cfari-samselpla <- #\{
                   canlu
                   #:rodalerfu (!#\}
                                #:lerfu .
                                {samselpla-samselpla-lerfu})+
                   #\}
                   canlu                            {samselpla-cfari-samselpla}

gerna           <- smuni*

smuni           <- #:naselci naselci
                   "<-"
                   canlu
                   #:javni javni                    {samselpla-smuni}

; this really doesn't need to be so strict.
naselci         <- #:cfari [[:alpha:]_\-]
                   #:fanmo [[:alnum:]_\-]*
                   canlu                            {samselpla-naselci}

javni           <- jonai
                 / je

jonai           <- #:cfari je
                   #:fanmo (#\/
                            canlu
                            #:je je
                            {samselpla-jonai-je})+  {samselpla-jonai}
je              <- #:rodajavni pajavni+
                   #:cmene     cmene-sumti?
                   #:samselpla samselpla?           {samselpla-je}

pajavni         <- optional
                 / repetition0
                 / repetition1
                 / and-predicate
                 / end-of-input
                 / not-predicate
                 / #:cmene cmene-sumti?
                   #:javni selci-javni              {samselpla-pajavni-cmene}

optional        <- #:cmene cmene-sumti?
                   #:javni selci-javni
                   #\?
                   canlu                            {samselpla-?}
repetition0     <- #:cmene cmene-sumti?
                   #:javni selci-javni
                   #\*
                   canlu                            {samselpla-*}
repetition1     <- #:cmene cmene-sumti?
                   #:javni selci-javni
                   #\+
                   canlu                            {samselpla-+}
and-predicate   <- #\&
                   canlu
                   #:javni selci-javni              {samselpla-&}
end-of-input    <- #\! canlu #\. canlu              {samselpla-fanmo}
not-predicate   <- #\!
                   canlu
                   #:javni selci-javni              {samselpla-!}

cmene-sumti     <- "#:"
                   #:cfari [[:alpha:]_\-]
                   #:fanmo [[:alnum:]_\-]*
                   canlu                            {samselpla-cmene-sumti}

selci-javni     <- selci-naselci
                 / lerfu-selci
                 / valsi-selci
                 / klesi-selci
                 / denpabu
                 / girzu-javni

selci-naselci   <- #:naselci naselci !"<-"          {samselpla-selci-naselci}

lerfu-selci     <- "#\\" #:lerfu lerfu-cmene canlu  {samselpla-lerfu-selci}
                 / "#\\" #:lerfu .           canlu  {samselpla-lerfu-selci}

lerfu-cmene     <- "space"                          {samselpla-lerfu-space}
                 / "return"                         {samselpla-lerfu-return}
                 / "linefeed"                       {samselpla-lerfu-linefeed}
                 / "newline"                        {samselpla-lerfu-newline}
                 / "return"                         {samselpla-lerfu-return}
                 / "tab"                            {samselpla-lerfu-tab}

valsi-selci     <- #\"
                   #:valsi-lerfu (!#\"
                                  #:lerfu valsi-lerfu
                                  {samselpla-valsi-selci-lerfu})*
                   #\"
                   canlu                  {samselpla-valsi-selci}
valsi-lerfu     <- #\\ #\n                {samselpla-valsi-newline}
                 / #\\ #\r                {samselpla-valsi-linefeed}
                 / #\\ #\t                {samselpla-valsi-tab}
                 / #\\ #\\                {samselpla-valsi-backslash}
                 / #\\ #\'                {samselpla-valsi-single-quote}
                 / #\\ #\"                {samselpla-valsi-double-quote}
                 / !#\\ #:lerfu .         {samselpla-valsi-lerfu}

klesi-selci      <- #\[
                    #:klesi-lerfu klesi-lerfu+
                    "]*"
                    canlu                            {samselpla-klesi-selci-*}
                  / #\[
                    #:klesi-lerfu klesi-lerfu+
                    "]+"
                    canlu                            {samselpla-klesi-selci-+}
                  / #\[
                    #:klesi-lerfu klesi-lerfu+
                    #\]
                    canlu                            {samselpla-klesi-selci}

klesi-lerfu      <- klesi-cmene
                  / (!#\]
                     #:klesi-lerfu .
                     {samselpla-klesi-lerfu})
klesi-cmene     <- "[:alnum:]"                       {samselpla-alnum}
                 / "[:alpha:]"                       {samselpla-alpha}
                 / "[:ascii:]"                       {samselpla-ascii}
                 / "[:blank:]"                       {samselpla-blank}
                 / "[:cntrl:]"                       {samselpla-cntrl}
                 / "[:digit:]"                       {samselpla-digit}
                 / "[:graph:]"                       {samselpla-graph}
                 / "[:lower:]"                       {samselpla-lower}
                 / "[:odigit:]"                      {samselpla-odigit}
                 / "[:print:]"                       {samselpla-print}
                 / "[:punct:]"                       {samselpla-punct}
                 / "[:space:]"                       {samselpla-space}
                 / "[:upper:]"                       {samselpla-upper}
                 / "[:xdigit:]"                      {samselpla-xdigit}
                 / "[:^alnum:]"                      {samselpla-^alnum}
                 / "[:^alpha:]"                      {samselpla-^alpha}
                 / "[:^ascii:]"                      {samselpla-^ascii}
                 / "[:^blank:]"                      {samselpla-^blank}
                 / "[:^cntrl:]"                      {samselpla-^cntrl}
                 / "[:^digit:]"                      {samselpla-^digit}
                 / "[:^graph:]"                      {samselpla-^graph}
                 / "[:^lower:]"                      {samselpla-^lower}
                 / "[:^odigit:]"                     {samselpla-^odigit}
                 / "[:^print:]"                      {samselpla-^print}
                 / "[:^punct:]"                      {samselpla-^punct}
                 / "[:^space:]"                      {samselpla-^space}
                 / "[:^upper:]"                      {samselpla-^upper}
                 / "[:^xdigit:]"                     {samselpla-^xdigit}

denpabu         <- #\. canlu                         {samselpla-denpabu}

samselpla       <- #\{
                   canlu
                   #:rodalerfu (!#\}
                                #:lerfu .
                                {samselpla-samselpla-lerfu})+
                   #\}
                   canlu                             {samselpla-samselpla}

girzu-javni     <- #\( canlu #:javni javni #\) canlu {samselpla-girzu-javni}

canlu           <- (canlubu / totoi)*                {samselpla-canlu}

canlubu         <- #\space
                 / #\tab
                 / CR
                 / LF
totoi           <- #\; (!CRLF .)* (CRLF / &FAhO)

CR              <- #\return
LF              <- #\linefeed
CRLF            <- CR LF
                /  CR
                /  LF

FAhO            <- !.
