;;;;
;;;; genturfahi - lo la .ckim. ke pe'a jajgau ratcu ke'e genturfa'i
;;;;            `-> A Scheme packrat parser.
;;;;
;;;; Copyright (c) 2010 ".alyn.post." <alyn.post@lodockikumazvati.org>
;;;;
;;;; Permission to use, copy, modify, and/or distribute this software for any
;;;; purpose with or without fee is hereby granted, provided that the above
;;;; copyright notice and this permission notice appear in all copies.
;;;;
;;;; THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
;;;; WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
;;;; MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
;;;; ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
;;;; WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
;;;; ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
;;;; OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
;;;;

;;;
;; Enable debugging of the paser.
;;
;; Describe the parse as it occurs, including
;; rule matches and failures, backtracking, memoization, &c.
;;
;; There may need to be a debug level.
;;
;{(secuxna debug)}

;; Enable profiling of the parser.
;;
;; for each step in the parser, track:
;;
;;  * success or failure of rule
;;  * memoization
;;
;{(secuxna profile)}

;; fold rules that only appear in other other production into that
;; production, removing the non-terminal name.
;;
;{(secuxna optimize)}

;{(secuxna memoize #t)}

;{(secuxna sentinal #\nul)}

;{(secuxna empty-string "")}

;{(secuxna nonmatch-token #f)}

;{(include "samselpa.scm")}

cfari           <- canlu gerna FAhO
                   ;{(samselpla-gerna gerna)}

gerna           <- smuni*

smuni           <- naselci "<-" canlu javni
                   ;{(samselpla-smuni naselci javni samselpla)}

; this really doesn't need to be so strict.
naselci         <- [[:alpha:]_-] [[:alnum:]_-]* canlu
                   ;{(apply samselpla-naselci cfari fanmo)}

javni           <- jonai
                 / je

jonai           <- je (#\/ canlu je)+
                   ;{(samselpla-jonai cfari fanmo)}
je              <- unary_rule+ samselpla?
                   ;{(samselpla-je rodajavni)}

unary_rule      <- optional
                 / repetition0
                 / repetition1
                 / and-predicate
                 / end-of-input
                 / not-predicate
                 / cmene-sumti? selci-javni

optional        <- cmene-sumti? selci-javni #\? canlu
                   ;{(samselpa-? selci-javni)}
repetition0     <- cmene-sumti? selci-javni #\* canlu
                   ;{(samselpa-* selci-javni)}
repetition1     <- cmene-sumti? selci-javni #\+ canlu
                   ;{(samselpa-+ selci-javni)}
and-predicate   <- #\& canlu selci-javni
                   ;{(samselpa-& selci-javni)}
end-of-input    <- #\! canlu #\. canlu
                   ;{(samselpa-fanmo)}
not-predicate   <- #\! canlu selci-javni
                   ;{(samselpa-! selci-javni)}

cmene-sumti     <- #\# [[:alpha:]_-] [[:alnum:]_-]* #\: canlu

selci-javni     <- selci-naselci
                 / lerfu-selci
                 / valsi-selci
                 / klesi-selci
                 / denpabu
                 / girzu-javni

selci-naselci   <- naselci !"<-"
                   ;{(samselpla-selci-naselci naselci)}

lerfu-selci     <- "#\\" lerfu-cmene canlu
                 / "#\\" .           canlu
                   ;{(samselpa-lerfu-selci lerfu)}

lerfu-cmene     <- "space"
                   ;{#\space}
                 / "linefeed"
                   ;{#\linefeed}
                 / "newline"
                   ;{#\newline}
                 / "return"
                   ;{#\return}
                 / "tab"
                   ;{#\tab}

valsi-selci     <- #\" (!#\" valsi-lerfu)* #\" canlu
                   ;{(list->string valsi-lerfu)
valsi-lerfu     <- "\n"
                 / "\r"
                 / "\t"
                 / "\\"
                 / "\'"
                 / "\""
                 / !#\\ .

klesi-selci      <- #\[ klesi-lerfu+ #\] (#\* / #\+)? canlu
klesi-lerfu      <- klesi-cmene
                  / (!#\[ .)
klesi-cmene     <- ":alnum:"
                 / ":alpha:"
                 / ":ascii:"
                 / ":blank:"
                 / ":cntrl:"
                 / ":digit:"
                 / ":graph:"
                 / ":lower:"
                 / ":odigit:"
                 / ":print:"
                 / ":punct:"
                 / ":space:"
                 / ":upper:"
                 / ":word:"
                 / ":xdigit:"

denpabu         <- #\. canlu

samselpla       <- #\{ canlu (!#\} .)* #\} canlu

girzu-javni     <- #\( canlu javni #\) canlu

canlu           <- (canlubu / totoi)*
                   ;{(samselpla-canlu)}

canlubu         <- (#\space #\tab CR LF)
totoi           <- #\; (!CRLF .)* (CRLF / &FAhO)

CR              <- #\return
LF              <- #\linefeed
CRLF            <- CR LF
                /  CR
                /  LF

FAhO            <- !.
